- name: Backup Dell N4064 Switch Startup Config and transfer via SSH
  hosts: dell_switch
  gather_facts: no
  vars:
    ansible_network_os: dellemc.os6.os6  # Specify the network OS
    ansible_become: no                  # Disable automatic privilege escalation

  tasks:
    - name: Ensure the switch is reachable
      ping:

    - name: Enter enable mode
      dellemc.os6.os6_command:
        commands: enable
      register: enable_result
      failed_when: >
        enable_result.stdout is defined and
        ('% Invalid input' in enable_result.stdout or 'Error' in enable_result.stdout)

    - name: Provide enable password
      dellemc.os6.os6_command:
        commands: "{{ ansible_enable_password }}"
      when: enable_result.stdout is defined and 'Password:' in enable_result.stdout
      register: enable_password_result
      failed_when: >
        enable_password_result.stdout is defined and
        ('% Invalid input' in enable_password_result.stdout or 'Error' in enable_password_result.stdout)

    - name: Retrieve startup config from the switch
      dellemc.os6.os6_command:
        commands: show startup-config
      register: startup_config
      failed_when: >
        startup_config.stdout is defined and
        ('Invalid input' in startup_config.stdout or 'Error' in startup_config.stdout)

    - name: Ensure the local backup directory exists
      file:
        path: "/path/to/local/backup"
        state: directory
        mode: '0755'
      delegate_to: localhost

    - name: Save the startup config to a local file
      copy:
        content: "{{ startup_config.stdout }}"
        dest: "/path/to/local/backup/startup-config-{{ inventory_hostname }}.cfg"
      delegate_to: localhost
      when: >
        startup_config.stdout is defined and
        not ('Invalid input' in startup_config.stdout or 'Error' in startup_config.stdout)

    - name: Verify the backup was saved successfully
      debug:
        msg: "Startup config for {{ inventory_hostname }} saved to /path/to/local/backup/startup-config-{{ inventory_hostname }}.cfg"
      when: >
        startup_config.stdout is defined and
        not ('Invalid input' in startup_config.stdout or 'Error' in startup_config.stdout)